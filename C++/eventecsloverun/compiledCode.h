#include "stdafx.h"
namespace {
/* code automatically generated by bin2c -- DO NOT EDIT *//* #include'ing this file in a C program is equivalent to calling  if (luaL_loadfile(L,"loveRun.lua")==0) lua_call(L, 0, 0); *//* loveRun.lua */static const unsigned char LOVERUN[]={108,111, 99, 97,108, 32,115,121,115,116,101,109,115, 32, 61, 32,114,101,113,117,105,114,101, 40, 34,115,121,115,116,101,109, 76,105,115,116, 34, 41, 13, 10, 13, 10,108,111, 99, 97,108, 32,102,114, 97,109,101, 82, 97,116,101, 32, 61, 32, 54, 48, 13, 10, 13, 10,102,117,110, 99,116,105,111,110, 32,115,101,116, 70,114, 97,109,101, 82, 97,116,101, 40,102,112,115, 41, 13, 10, 32, 32, 97,115,115,101,114,116, 40,116,121,112,101, 40,102,112,115, 41, 32, 61, 61, 32, 34,110,117,109, 98,101,114, 34, 32, 97,110,100, 32,102,112,115, 32, 62, 32, 48, 44, 32, 34, 70, 80, 83, 32,109,117,115,116, 32, 98,101, 32, 97, 32,110,117,109, 98,101,114, 32,103,114,101, 97,116,101,114, 32,116,104, 97,110, 32, 48, 34, 41, 13, 10, 32, 32,102,114, 97,109,101, 82, 97,116,101, 32, 61, 32,102,112,115, 13, 10,101,110,100, 13, 10, 13, 10,102,117,110, 99,116,105,111,110, 32,108,111,118,101, 46,114,117,110, 40, 41, 13, 10, 32, 32,115,121,115,116,101,109,115, 46, 98,114,111, 97,100, 99, 97,115,116, 69,118,101,110,116, 40, 39,101,118,101,110,116,108,111, 97,100, 39, 44, 32,108,111,118,101, 46, 97,114,103, 46,112, 97,114,115,101, 71, 97,109,101, 65,114,103,117,109,101,110,116,115, 40, 97,114,103, 41, 44, 32, 97,114,103, 41, 13, 10, 13, 10, 32, 32,108,111, 99, 97,108, 32,110,101,120,116, 84,105,109,101, 13, 10, 13, 10, 32, 32, 45, 45, 32, 87,101, 32,100,111,110, 39,116, 32,119, 97,110,116, 32,116,104,101, 32,102,105,114,115,116, 32,102,114, 97,109,101, 39,115, 32,100,116, 32,116,111, 32,105,110, 99,108,117,100,101, 32,116,105,109,101, 32,116, 97,107,101,110, 32, 98,121, 32,108,111,118,101, 46,108,111, 97,100, 46, 13, 10, 32, 32,105,102, 32,108,111,118,101, 46,116,105,109,101,114, 32,116,104,101,110, 13, 10, 32, 32, 32, 32,108,111,118,101, 46,116,105,109,101,114, 46,115,116,101,112, 40, 41, 13, 10, 32, 32, 32, 32,110,101,120,116, 84,105,109,101, 32, 61, 32,108,111,118,101, 46,116,105,109,101,114, 46,103,101,116, 84,105,109,101, 40, 41, 13, 10, 32, 32,101,110,100, 13, 10, 13, 10, 32, 32,108,111, 99, 97,108, 32,117,112,100, 97,116,101, 65,114,103,115, 32, 61, 32,123,100,116, 32, 61, 32, 48,125, 13, 10, 32, 32,108,111, 99, 97,108, 32,113,117,105,116, 65,114,103,115, 32, 61, 32,123,104, 97,110,100,108,101,100, 32, 61, 32,102, 97,108,115,101,125, 13, 10, 13, 10, 32, 32, 45, 45, 32, 77, 97,105,110, 32,108,111,111,112, 32,116,105,109,101, 46, 13, 10, 32, 32,114,101,116,117,114,110, 32,102,117,110, 99,116,105,111,110, 40, 41, 13, 10, 32, 32,  9, 45, 45, 32, 80,114,111, 99,101,115,115, 32,101,118,101,110,116,115, 46, 13, 10, 32, 32,  9,105,102, 32,108,111,118,101, 46,101,118,101,110,116, 32,116,104,101,110, 13, 10, 32, 32,  9,  9,108,111,118,101, 46,101,118,101,110,116, 46,112,117,109,112, 40, 41, 13, 10, 32, 32,  9,  9,102,111,114, 32,110, 97,109,101, 44, 32, 97, 44, 98, 44, 99, 44,100, 44,101, 44,102, 32,105,110, 32,108,111,118,101, 46,101,118,101,110,116, 46,112,111,108,108, 40, 41, 32,100,111, 13, 10, 32, 32,  9,  9,  9,105,102, 32,110, 97,109,101, 32, 61, 61, 32, 39,113,117,105,116, 39, 32,116,104,101,110, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,115,121,115,116,101,109,115, 46, 98,114,111, 97,100, 99, 97,115,116, 69,118,101,110,116, 40, 39,101,118,101,110,116,113,117,105,116, 39, 44, 32,113,117,105,116, 65,114,103,115, 41, 13, 10, 32, 32,  9,  9,  9,  9,105,102, 32,110,111,116, 32,113,117,105,116, 65,114,103,115, 46,104, 97,110,100,108,101,100, 32,116,104,101,110, 13, 10, 32, 32,  9,  9,  9,  9,  9,114,101,116,117,114,110, 32, 97, 32,111,114, 32, 48, 13, 10, 32, 32,  9,  9,  9,  9,101,110,100, 13, 10, 32, 32,  9,  9,  9,101,110,100, 13, 10, 32, 32,  9,  9,  9,115,121,115,116,101,109,115, 46, 98,114,111, 97,100, 99, 97,115,116, 69,118,101,110,116, 40, 39,101,118,101,110,116,110, 97,109,101, 39, 44, 32,123, 97, 44, 98, 44, 99, 44,100, 44,101, 44,102,125, 41, 13, 10, 32, 32,  9,  9,101,110,100, 13, 10, 32, 32,  9,101,110,100, 13, 10, 13, 10, 32, 32,  9, 45, 45, 32, 85,112,100, 97,116,101, 32,100,116, 44, 32, 97,115, 32,119,101, 39,108,108, 32, 98,101, 32,112, 97,115,115,105,110,103, 32,105,116, 32,116,111, 32,117,112,100, 97,116,101, 13, 10, 32, 32,  9,105,102, 32,108,111,118,101, 46,116,105,109,101,114, 32,116,104,101,110, 32,117,112,100, 97,116,101, 65,114,103,115, 46,100,116, 32, 61, 32,108,111,118,101, 46,116,105,109,101,114, 46,115,116,101,112, 40, 41, 32,101,110,100, 13, 10, 13, 10, 32, 32,  9, 45, 45, 32, 67, 97,108,108, 32,117,112,100, 97,116,101, 32, 97,110,100, 32,100,114, 97,119, 13, 10, 32, 32,  9,115,121,115,116,101,109,115, 46, 98,114,111, 97,100, 99, 97,115,116, 69,118,101,110,116, 40, 39,101,118,101,110,116,117,112,100, 97,116,101, 39, 44, 32,117,112,100, 97,116,101, 65,114,103,115, 41, 32, 45, 45, 32,119,105,108,108, 32,112, 97,115,115, 32, 48, 32,105,102, 32,108,111,118,101, 46,116,105,109,101,114, 32,105,115, 32,100,105,115, 97, 98,108,101,100, 13, 10, 13, 10, 32, 32,  9,105,102, 32,108,111,118,101, 46,103,114, 97,112,104,105, 99,115, 32, 97,110,100, 32,108,111,118,101, 46,103,114, 97,112,104,105, 99,115, 46,105,115, 65, 99,116,105,118,101, 40, 41, 32,116,104,101,110, 13, 10, 32, 32,  9,  9,108,111,118,101, 46,103,114, 97,112,104,105, 99,115, 46,111,114,105,103,105,110, 40, 41, 13, 10, 32, 32,  9,  9,108,111,118,101, 46,103,114, 97,112,104,105, 99,115, 46, 99,108,101, 97,114, 40,108,111,118,101, 46,103,114, 97,112,104,105, 99,115, 46,103,101,116, 66, 97, 99,107,103,114,111,117,110,100, 67,111,108,111,114, 40, 41, 41, 13, 10, 13, 10, 32, 32,  9,  9,115,121,115,116,101,109,115, 46, 98,114,111, 97,100, 99, 97,115,116, 69,118,101,110,116, 40, 39,101,118,101,110,116,100,114, 97,119, 39, 41, 13, 10, 13, 10, 32, 32,  9,  9,108,111,118,101, 46,103,114, 97,112,104,105, 99,115, 46,112,114,101,115,101,110,116, 40, 41, 13, 10, 32, 32,  9,101,110,100, 13, 10, 13, 10, 32, 32,  9,105,102, 32,108,111,118,101, 46,116,105,109,101,114, 32,116,104,101,110, 13, 10, 32, 32, 32, 32, 32, 32,110,101,120,116, 84,105,109,101, 32, 61, 32,110,101,120,116, 84,105,109,101, 32, 43, 32, 40, 49, 32, 47, 32,102,114, 97,109,101, 82, 97,116,101, 41, 13, 10, 32, 32, 32, 32, 32, 32,108,111, 99, 97,108, 32, 99,117,114, 84,105,109,101, 32, 61, 32,108,111,118,101, 46,116,105,109,101,114, 46,103,101,116, 84,105,109,101, 40, 41, 13, 10, 32, 32, 32, 32, 32, 32,105,102, 32,110,101,120,116, 84,105,109,101, 32, 60, 61, 32, 99,117,114, 84,105,109,101, 32,116,104,101,110, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32,110,101,120,116, 84,105,109,101, 32, 61, 32, 99,117,114, 84,105,109,101, 13, 10, 32, 32, 32, 32, 32, 32,101,108,115,101, 13, 10, 32, 32, 32, 32, 32, 32, 32, 32,108,111,118,101, 46,116,105,109,101,114, 46,115,108,101,101,112, 40,110,101,120,116, 84,105,109,101, 32, 45, 32, 99,117,114, 84,105,109,101, 41, 13, 10, 32, 32, 32, 32, 32, 32,101,110,100, 13, 10, 32, 32, 32, 32,101,110,100, 13, 10, 32, 32,101,110,100, 13, 10,101,110,100, 13, 10,};int luaopen_loveRun(lua_State* L)
{
  if (luaL_loadbuffer(L,(const char*)LOVERUN,sizeof(LOVERUN),"loveRun.lua")==0) lua_call(L, 0, 1);  return 1;
}

const std::map<const char*, lua_CFunction> funcMap =
{

	{"loveRun", luaopen_loveRun},
};
}
