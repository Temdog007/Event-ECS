<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Event_ECS_WPF.Controls"
                    xmlns:ex="clr-namespace:Event_ECS_WPF.Extensions"
                    xmlns:misc="clr-namespace:Event_ECS_WPF.Misc"
                    xmlns:selector="clr-namespace:Event_ECS_WPF.TemplateSelectors">

    <selector:ProjectDataTemplateSelector x:Key="projectSelector" />
    <selector:EntityVariableTemplateSelector x:Key="entityVariableTemplateSelector" />
    <selector:ColorVariableTemplateSelector x:Key="colorVariableTemplateSelector" />

    <DataTemplate x:Key="projectTemplate">
        <controls:ProjectControl Project="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="loveProjectTemplate">
        <ScrollViewer>
            <controls:LoveProjectControl LoveProject="{Binding}" />
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="projectMenuTemplate">
        <controls:ProjectMenuControl Project="{Binding}" />
    </DataTemplate>
    
    <DataTemplate x:Key="sliderEntityVariable">

        <GroupBox FontWeight="Bold" Header="{Binding Key, Converter={StaticResource colorIndexConv}}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <GroupBox.Background>
                <MultiBinding Converter="{StaticResource colorBackgroundConv}">
                    <Binding Path="Key"/>
                    <Binding Path="Value.Value" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                </MultiBinding>
            </GroupBox.Background>

            <GroupBox.Foreground>
                <MultiBinding Converter="{StaticResource colorForegroundConv}">
                    <Binding Path="Key"/>
                    <Binding Path="Value.Value" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                </MultiBinding>
            </GroupBox.Foreground>

            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10">
                <TextBlock DockPanel.Dock="Top" Text="{Binding Value.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Slider Minimum="0" Maximum="1" TickFrequency="0.05" Grid.ColumnSpan="2" MinWidth="175"
                    TickPlacement="BottomRight" Margin="5" IsMoveToPointEnabled="True"
                    Value="{Binding Value.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>

        </GroupBox>
    </DataTemplate>

    <DataTemplate x:Key="colorEntityVariable">
        <Expander FontWeight="Bold" Header="{Binding Name}">
            <ListView ItemsSource="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                      ItemTemplateSelector="{StaticResource colorVariableTemplateSelector}">
                <ListView.Background>
                    <MultiBinding Converter="{StaticResource colorComboConv}">
                        <Binding Path="Value[1].Value" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Path="Value[2].Value" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Path="Value[3].Value" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Path="Value[4].Value" UpdateSourceTrigger="PropertyChanged"/>
                    </MultiBinding>
                </ListView.Background>
            </ListView>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="boolEntityVariable">
        <CheckBox VerticalAlignment="Stretch" IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </DataTemplate>

    <DataTemplate x:Key="defaultEntityVariable">
        <TextBox TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            
            <TextBox.Resources>
                <ex:BindingProxy x:Key="Var" Data="{Binding}"/>
            </TextBox.Resources>
            
            <TextBox.Text>
                <Binding Path="Value" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <misc:EntityVariableValidation>
                            <misc:EntityVariableValidation.Variable>
                                <misc:EntityVariableChecker EntityVariable="{Binding Source={StaticResource Var}, Path=Data}"/>
                            </misc:EntityVariableValidation.Variable>
                        </misc:EntityVariableValidation>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>

            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>

        </TextBox>
    </DataTemplate>

    <DataTemplate x:Key="tableEntityVariable">
        <Expander>
            <DataGrid ItemsSource="{Binding Value, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" 
                      CanUserReorderColumns="True" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="True"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Header="Key" Binding="{Binding Key, UpdateSourceTrigger=PropertyChanged}" Width="auto"/>
                    <DataGridTemplateColumn Header="Value" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentPresenter ContentTemplateSelector="{StaticResource entityVariableTemplateSelector}" 
                                                  Content="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Expander>
    </DataTemplate>
    
</ResourceDictionary>